@using Onebrb.MVC.Models.Item
@using System.Net.Http
@using Newtonsoft.Json
@using System.Text
@inject NavigationManager navigationManager;
@inject HttpClient Http

<p>Publish new item (@CurrentUserId)</p>
<p class="@notifyBarClass">@onSubmitResult</p>
<p class="@notifyBarClass">@selectedCategory</p>

<EditForm Model="@Item" OnSubmit="HandleSubmit">
    <div class="form-group">
        <label for="itemTitle">
            Title
        </label>
        <InputText @bind-Value="Item.Title" id="itemTitle" class="form-control" />
    </div>

    <div class="form-group">
        <label for="itemCategories">
            Category
        </label>

        <InputSelect @bind-Value="SelectedCategory" id="itemCategories" class="form-control">
            @foreach (var category in Model.Categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </InputSelect>
    </div>

    <div class="form-group">
        <label for="itemDescription">
            Description:
        </label>
        <InputTextArea @bind-Value="Item.Description" id="itemDescription" class="form-control" />
    </div>


    <div class="form-group">
        <label for="itemPrice">
            Price
        </label>
        <InputNumber @bind-Value="Item.Price" id="itemPrice" class="form-control" />
    </div>

    <button type="submit" class="btn btn-success">Publish</button>
</EditForm>
@{
}


@code {
    [Parameter]
    public CreateItemViewModel Model { get; set; }

    [Parameter]
    public string ViewerId { get; set; }

    [Parameter]
    public string CurrentUserId { get; set; }

    CreateItemRequestModel Item = new CreateItemRequestModel();
    public string SelectedCategory { get; set; }

    public string onSubmitResult { get; set; }
    public string notifyBarClass { get; set; }
    public string selectedCategory { get; set; }

    private async Task HandleSubmit()
    {
        notifyBarClass = "alert-notify";
        onSubmitResult = $"Selected option {SelectedCategory}";


        try
        {
            // Add category
            Item.CategoryId = int.Parse(SelectedCategory);
            var json = JsonConvert.SerializeObject(Item);
            var data = new StringContent(json, Encoding.UTF8, "application/json");

            var response = await Http.PostAsync($"{navigationManager.BaseUri}api/Items/Create", data);

            string result = response.Content.ReadAsStringAsync().Result;

            ////onSubmitResult = SelectedCategory;
        }
        catch (Exception)
        {
            onSubmitResult = "Couldn't publish the item, please try again later...";
        }

    }
}
