// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace OnebrbApiClient
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for OnebrbApi.
    /// </summary>
    public static partial class OnebrbApiExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static CategoryServiceModelICollectionBaseApiResponse GetAllCategories(this IOnebrbApi operations)
            {
                return operations.GetAllCategoriesAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CategoryServiceModelICollectionBaseApiResponse> GetAllCategoriesAsync(this IOnebrbApi operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAllCategoriesWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='itemId'>
            /// </param>
            public static ItemServiceModelBaseApiResponse GetItem(this IOnebrbApi operations, int itemId)
            {
                return operations.GetItemAsync(itemId).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='itemId'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ItemServiceModelBaseApiResponse> GetItemAsync(this IOnebrbApi operations, int itemId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetItemWithHttpMessagesAsync(itemId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='itemId'>
            /// </param>
            /// <param name='body'>
            /// </param>
            public static void EditItem(this IOnebrbApi operations, int itemId, EditItemModel body = default(EditItemModel))
            {
                operations.EditItemAsync(itemId, body).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='itemId'>
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task EditItemAsync(this IOnebrbApi operations, int itemId, EditItemModel body = default(EditItemModel), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.EditItemWithHttpMessagesAsync(itemId, body, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='itemId'>
            /// </param>
            public static void Delete(this IOnebrbApi operations, int itemId)
            {
                operations.DeleteAsync(itemId).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='itemId'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IOnebrbApi operations, int itemId, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(itemId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static ItemServiceModelBaseApiResponse CreateItem(this IOnebrbApi operations, ItemRequestModel body = default(ItemRequestModel))
            {
                return operations.CreateItemAsync(body).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ItemServiceModelBaseApiResponse> CreateItemAsync(this IOnebrbApi operations, ItemRequestModel body = default(ItemRequestModel), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateItemWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='username'>
            /// </param>
            public static ItemServiceModelICollectionBaseApiResponse GetItems(this IOnebrbApi operations, string username)
            {
                return operations.GetItemsAsync(username).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='username'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ItemServiceModelICollectionBaseApiResponse> GetItemsAsync(this IOnebrbApi operations, string username, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetItemsWithHttpMessagesAsync(username, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
